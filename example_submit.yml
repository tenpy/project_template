#!/usr/bin/env -S cluster_jobs.py submit
# requires that `model_custom.py` can be imported.

job_config:
    class: JobConfig  # JobConfig = run locally; SlurmJob = submit to slurm
    jobname: MyJob
    task: 
        type: PythonFunctionCall
        module: tenpy
        function: run_simulation
        extra_imports:
            - model_custom

    #script_template: slurm.sh
    requirements_slurm:
        time: '0:30:00'
        nodes: 1
    # requirements_sge:
    #     time: '0:30:00'
    #     nodes: 1
    # options: 
    #     mail: no@example.com

    change_parameters:
        # update the global `output_filename_params with the `recursive_keys` below
        output_filename_params_key: output_filename_params

        expansion: product  # product or zip
        recursive_keys:
            # note that these get added to the filename automatically
            - algorithm_params.trunc_params.chi_max
            - model_params.B
            - model_params.D

simulation_class : GroundStateSearch

directory: results
output_filename_params:
    prefix: dmrg
    parts:
        algorithm_params.trunc_params.chi_max: 'chi_{0:04d}'
        model_params.B: 'B_{0:.1f}'
        model_params.D: 'D_{0:.1f}'
    suffix: .h5
  
# output_filename is updated by cluster_jobs.py from the `job_config: change_paramters` section above
# skip_if_output_exists: True
# overwrite_output: True
save_every_x_seconds: 1800
# save_psi: False  # don't save full wave function - less disk space, but can't resume/redo measurements!

log_params:
    to_stdout: WARNING  # always check this output - empty is good
    to_file: INFO

model_class : AnisotropicSpin1Chain
model_params :
    L: 2
    bc_MPS: infinite
    J: 1.
    B: [0.]
    D: !py_eval "np.arange(-1., 1.5, 0.5)"

initial_state_params:
    method : lat_product_state
    product_state : [[up], [down]]

algorithm_class: TwoSiteDMRGEngine
algorithm_params:
    trunc_params:
        svd_min: 1.e-8
        chi_max: [128, 256]

connect_measurements: 
  - - tenpy.simulations.measurement
    - m_onsite_expectation_value
    - opname: Sz
  - - psi_method
    - wrap correlation_function
    - results_key: '<Sp_i Sm_j>'
      ops1: Sp
      ops2: Sm
  - - model_custom  # module where this function is defined
    - m_pollmann_turner_inversion
